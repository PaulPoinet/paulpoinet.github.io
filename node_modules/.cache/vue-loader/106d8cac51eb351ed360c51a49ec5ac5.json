{"remainingRequest":"D:\\SourceTree\\paulpoinet\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\SourceTree\\paulpoinet\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!D:\\SourceTree\\paulpoinet\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SourceTree\\paulpoinet\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SourceTree\\paulpoinet\\src\\components\\works\\ICD-ITKE-Research-Pavilion-2014-15.vue?vue&type=template&id=018a82ba&","dependencies":[{"path":"D:\\SourceTree\\paulpoinet\\src\\components\\works\\ICD-ITKE-Research-Pavilion-2014-15.vue","mtime":1586563131886},{"path":"D:\\SourceTree\\paulpoinet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586563099969},{"path":"D:\\SourceTree\\paulpoinet\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1586563124604},{"path":"D:\\SourceTree\\paulpoinet\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1586563125573},{"path":"D:\\SourceTree\\paulpoinet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586563099969},{"path":"D:\\SourceTree\\paulpoinet\\node_modules\\vue-loader\\lib\\index.js","mtime":1586563124588}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}