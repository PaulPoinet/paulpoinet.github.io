{"remainingRequest":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\src\\views\\About.vue?vue&type=template&id=039c5b43&","dependencies":[{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\src\\views\\About.vue","mtime":1586450694930},{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paul Poinet\\Documents\\AEC_Delta\\01_SourceTree\\theweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}